schema {
  query: Query
  mutation: Mutation
}

type Component {
  config: ComponentConfig!
  createdAt: String!
  id: String!
  name: String!
}

type ComponentConfig {
  commitMessage: String!
  createdAt: DateTime!
  id: String!
  payload: String!
  revision: Int!
}

input CreateComponentInput {
  name: String!
  parentId: String
}

input CreateConfigInput {
  commitMessage: String!
  componentId: String!
  payload: String!
}

input CreateStageInput {
  description: String
  name: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input GetComponentInput {
  parent: String
}

input GetHistoryForConfig {
  componentId: String!
  skip: Int!
  take: Int!
}

input LoginInput {
  password: String!
  username: String!
}

type LoginOutput {
  token: String!
}

type Mutation {
  createComponent(input: CreateComponentInput!): Component!
  createComponentConfig(input: CreateConfigInput!): ComponentConfig!
  createStage(input: CreateStageInput!): Stage!
  login(input: LoginInput!): LoginOutput!
}

type Query {
  getComponentByParent(input: GetComponentInput!): [Component!]!
  getConfigHistory(input: GetHistoryForConfig!): [ComponentConfig!]!
  getStages: [Stage!]!
  me: UserAccount!
}

type Stage {
  createdAt: String!
  id: String!
  name: String!
}

type UserAccount {
  id: String!
  username: String!
}